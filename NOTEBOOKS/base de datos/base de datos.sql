-- Eliminar la base de datos
DROP DATABASE IF EXISTS pp_note;

-- Crear la base de datos si no existe
CREATE DATABASE IF NOT EXISTS pp_note; 
USE pp_note;

-- Crear tabla COMPUTADORA sin la tabla ESTADO y con el nuevo atributo 'estado'
CREATE TABLE COMPUTADORA ( 
    NOMBRE VARCHAR(50) PRIMARY KEY,  
    MARCA VARCHAR(50), 
    estado VARCHAR(50)  -- Nuevo atributo estado
);

-- Crear tabla usuario
CREATE TABLE usuario ( 
    id INT PRIMARY KEY AUTO_INCREMENT, 
    nombre VARCHAR(255), 
    email VARCHAR(100), 
    contrase√±a VARCHAR(100), 
    division VARCHAR(100), 
    especialidad VARCHAR(100), 
    clave INT,
    tipo_usuario ENUM('admin', 'profesor', 'alumno') DEFAULT 'alumno',  
    fecha DATE 
);

-- Crear tabla PRESTAMO
CREATE TABLE PRESTAMO ( 
    ID_PRESTAMO INT AUTO_INCREMENT PRIMARY KEY,
    FECHA_PRESTAMO DATE, 
    HORA_INICIO_PRESTAMO TIME, 
    HORA_FIN_PRESTAMO TIME, 
    ESTADO_PRESTAMO VARCHAR(50), 
    ID_USUARIO INT, 
    NOMBRE_COMPUTADORA VARCHAR(50),  
    FOREIGN KEY (ID_USUARIO) REFERENCES usuario(id), 
    FOREIGN KEY (NOMBRE_COMPUTADORA) REFERENCES COMPUTADORA(NOMBRE)  
);

-- Crear tabla HISTORIAL_PRESTAMO
CREATE TABLE HISTORIAL_PRESTAMO ( 
    ID_HISTORIAL INT PRIMARY KEY, 
    ID_PRESTAMO INT, 
    DESCRIPCION VARCHAR(255), 
    FOREIGN KEY (ID_PRESTAMO) REFERENCES PRESTAMO(ID_PRESTAMO) 
);

-- Crear tabla MANTENIMIENTO
CREATE TABLE MANTENIMIENTO ( 
    ID_MANTENIMIENTO INT PRIMARY KEY AUTO_INCREMENT, 
    DESCRIPCION VARCHAR(255), 
    FECHA_MANTENIMIENTO DATE, 
    NOMBRE_COMPUTADORA VARCHAR(50),  
    FOREIGN KEY (NOMBRE_COMPUTADORA) REFERENCES COMPUTADORA(NOMBRE)  
);

CREATE TABLE NOTEBOOKS_SOLICITADAS (
    ID_SOLICITUD INT AUTO_INCREMENT PRIMARY KEY,
    ID_PRESTAMO INT,
    FOREIGN KEY (ID_PRESTAMO) REFERENCES PRESTAMO(ID_PRESTAMO)
);

SELECT * FROM usuario;

ALTER TABLE usuario ADD COLUMN activo TINYINT(1) DEFAULT 0;